apiVersion: v1
kind: Service
metadata:
  name: s753-apache-prod-svc # Jenkins will use this name to get the NodePort
  namespace: s753-production
  labels:
    app: s753-apache
    environment: production
spec:
  type: NodePort # Exposes the service on each Node's IP at a static port (the NodePort)
                 # Minikube can also simulate LoadBalancer with 'minikube tunnel'
  ports:
    - port: 80 # Internal port the service listens on
      targetPort: 80 # Port the Apache container listens on
      nodePort: 30080 # Static NodePort (must be in range 30000-32767). Or omit to let K8s assign one.
                      # This matches PROD_APACHE_NODE_PORT in your Jenkinsfile
  selector:
    app: s753-apache
    environment: production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: s753-apache-prod-deployment
  namespace: s753-production
  labels:
    app: s753-apache
    environment: production
spec:
  replicas: 1 # You can scale this
  selector:
    matchLabels:
      app: s753-apache
      environment: production
  template:
    metadata:
      labels:
        app: s753-apache
        environment: production
    spec:
      containers:
        - name: apache
          image: docker1010/s753-t73-apache:v1.0.35
          ports:
            - containerPort: 80 # Port Apache listens on inside the container
          # Add readiness/liveness probes for production robustness
          # readinessProbe:
          #   httpGet:
          #     path: /index.php # or your healthcheck.php
          #     port: 80
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          # livenessProbe:
          #   httpGet:
          #     path: /index.php
          #     port: 80
          #   initialDelaySeconds: 15
          #   periodSeconds: 20
